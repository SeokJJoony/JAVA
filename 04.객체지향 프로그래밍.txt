*인스턴스 생성과 사용
클래스명 변수명 //참조변수선언
변수명 = new 클래스명() //참조변수에 객체주소 저장

객체? 인스턴스? 
예) TV는 하나의 객체이다. TV는 A라는 클래스의 인스턴스이다.
 가비지 컬렉터가 자동으로 인스턴스의 메모리 할당/해제

*선언 위치에 따른 변수의 종류
클래스변수 vs 인스턴스 변수
인스턴스 변수는 인스턴스를 생성해야 사용가능
카드게임에서 카드의 무늬, 색깔은 각 객체의 고유특성이므로 인스턴스 변수에 해당
카드의 폭, 높이는 모든 객체의 공통적인 특성이므로 클래스 변수를 선언하여 쓰는게 맞음
하나의 인스턴스에서 클래스변수의 값을 변경하면 공통으로 변경됨(하나의 저장공간 공유)

*JVM의 메모리구조
1) 메서드 영역 : 클래스 정보, 변수가 저장
2) 힙영역: 인스턴스가 저장, 인스턴스 변수가 생성
3) call stack(스택 영역) : 메서드, 메서드의 지역변수가 저장

예제 6-12) 향상된 for문 for(int a: array)

*재귀호출
왜 반복문 대신 재귀호출을 사용할까? 더 느린데? 논리적 간결함을 위해서임

*클래스 메서드
클래스 메서드는 인스턴스 변수와 관련없는 작업을 수행할 때 사용(클래스 변수를 사용할 때)
호출 시간이 발라지므로 성능이 향상

*클래스 멤버와 인스턴스 멤버간의 참조와 호출

c= new 클래스명()
c.instanceMethod();  대신  result = new클래스명().instanceMethod() 로 사용가능

*오버로딩
오버로딩이란? 같은 이름의 객체를 다른 매개변수로 구분하여 사용가능

(어려움)****가변인자 오버로딩 -> 배열을 매개변수(자바에서는 자동으로 동적할당이 가능함)로 하여 동적인 매개변수 사용이 가능
가변인자 메서드끼리 오버로딩이 불가능하여 에러가 날 수 있으니 되도록이면 가변인자 메서드를 오버로딩하여 사용하면 안됨

*생성자
생성자란? 인스턴스 초기화 메서드를 말함

*생성자에서 다른 생성자 호출하기 - this(), this
1) 생성자 이름을 this()로 표기
2) 구현부의 첫줄에 표기 -> 이전에 초기화된 값들이 다른 생성자의 호출로 무의미 될 수 있기 때문에

this는 인스턴스의 참조변수, 자기 자신을 가리킴
this()는 생성자, 다른 생성자를 호출할 때 사용
-----------------------------------------------------자바의 정석 307페이지 