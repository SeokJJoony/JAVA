*배열 (C와 다른 형식이라 정리)
1)배열의 생성
타입[] 변수이름;
변수이름 = new 타입[길이];

int[] score;  배열을 선언
score = new int[5]; 배열을 생성(실제 저장공간에 할당)

2)배열의 길이
JVM에서는 모든 배열의 길이를 별도로 관리, 배열이름.length를 통해
배열의 길이에 대한 정보를 얻을 수 있다.

3)배열의 출력
for문으로 보통 출력을 해왔지만 자바에서는
Arrays.toString(배열이름) 메소드를 사용하여 출력가능
배열의 모든 값을 문자열 형태로 반환해주는 메소드임. 

만약 문자가 아닌 배열이름을 바로 출력하면? C에서는 배열이름은 첫 인덱스의 주소를 나타내므로 주소가 출력
하지만 자바에서는 '타입@주소'형식으로 출력

초기화를 안해주면 0으로 채워짐

4)배열의 복사
System.arraycopy()를 이용한 배열의 복사
System.arraycopy(num,0,tmp,0,num.length);
               (복사할 배열,처음 인덱스,붙여넣을 배열,처음 인덱스,복사할 배열의 길이)

*String 클래스
1)String 배열 초기화
String[] name = new String[]{"Yoon","Kim","Lee"};
String[] name = {"Yoon","Kim","Lee"}; //new String[]을 생략가능

2)String 배열과 char 배열의 차이점
String은 char보다 더 편리한 메소드(기능)를 제공
String str= new String();

str.charAt(0) 문자열에서 0번째 인덱스 반환
str.substring(1,4) 1이상 4미만 인덱스 반환
str.equals("abc") 문자열의 내용과 비교하여 같으면 true 다르면 false 반환

char[] chArr = {'A','B','C'};
String str = new String(chArr); //char -> String
char[] tmp = str.tocharArray() //String -> char

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String src = "ABCDE";

		for (int i = 0; i < src.length(); i++) {
				char ch =src.charAt(i);  //i번째 문자  
				System.out.println("src.charAt("+i+") = "+ ch);
		}
		char[] tmp = src.toCharArray(); //String 데이터를 char 데이터로 변환
		
		System.out.println(tmp);
	}  //String 과 char 비교하는 클래스

*향상된 for문으로 2차원 배열의 모든 요소 합구하기
for(int[] tmp : score)   //score의 각 요소(각 행의 주소, 즉, 1차원 배열 주소)를 tmp에 저장
{
   for(int i : tmp)       //tmp는 1차원 배열의 주소를 저장하는 참조변수, 즉 모든 행의 데이터를 읽어들임
      SUM +=i;
}

*가변 배열
자바에서는 2차원 이상의 배열을 '배열의 배열'의 형태로 처리
따라서 자유로운 형태의 배열을 구성할 수 있음

ex) int[][] score = new int[5][];
    score[0] = new int[4]; // 원하는 길이 만큼 배열 생성
    score[1] = new int[3]; 

*다차원 배열의 활용
예제 5-20) i+'0': 숫자를 문자로 변환한다는 뜻
   반대로   i-'0': 문자를 숫자로 변환
System.out.println(board[i]) 1차원 배열의 참조변수를 프린트-> 문자형식의 2차원 배열이기 때문에 문자열이 출력

예제 5-21) 5x5 빙고판에 1~25까지 입력하려면 i * size +j +1 -> i로 5배수 씩 행 변경 j로 열 변경
 math.random() *size  //1~5까지의 난수
 Integer.parseInt(문자열) // 숫자로 된 문자열을 숫자로 변환
 2중 for문을 탈출하기 위해 break outer; 사용
 
예제 5-22) final -> 상수화 (C에서는 const)

예제 5-23) next() / nextLine() 스페이스바를 인식하여 넘어감/ 엔터를 인식하여 넘어감
String 객체.equals(문자열) 스트링 객체 내용과 문자열과 비교하여 1 0 리턴 

